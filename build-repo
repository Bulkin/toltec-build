#!/usr/bin/env bash

set -e
source "${BASH_SOURCE%/*}"/lib

usage="$0 [OPTION]... RECIPESDIR WORKDIR

Build new or updated packages defined in RECIPESDIR and create a package index.
The WORKDIR must be a non-existent directory in which the builds are performed.

Options:

    -h              Show this help message.
    -f              Force building all the packages, even those for which
                    an already built version exists on the remote."

helpflag=
forceflag=

while getopts hf name; do
    case $name in
        h) helpflag=1 ;;
        f) forceflag=1 ;;
        *) error "Invalid option. Use the -h flag for more information." ;;
    esac
done

shift $((OPTIND - 1))

if [[ -n $helpflag ]]; then
    echo "$usage"
    exit
fi

if [[ $# -eq 0 ]]; then
    error "Missing RECIPESDIR and WORKDIR arguments. Use the -h flag for more information."
fi

if [[ $# -eq 1 ]]; then
    error "Missing WORKDIR argument. Use the -h flag for more information."
fi

if [[ $# -gt 2 ]]; then
    error "Extraneous arguments. Use the -h flag for more information."
fi

recipesdir="$1"
workdir="$2"

pkgsworkdir="$workdir"/packages
mkdir -p "$pkgsworkdir"

repodir="$workdir"/repo

[[ -d $repodir ]] && files="$(ls -qA -- "$repodir")" && [[ -n $files ]] \
    && error "Repository directory '$repodir' exists and is not empty"
mkdir -p "$repodir"

# URL to the remote repository
branch="$(git rev-parse --abbrev-ref HEAD)"
remote="https://toltec.delab.re/$branch"

# Define the SOURCE_DATE_EPOCH to the date of latest commit
# See <https://reproducible-builds.org/docs/source-date-epoch/>
SOURCE_DATE_EPOCH="$(git log -1 --pretty=%ct)"
export SOURCE_DATE_EPOCH

# Build each package or get it from the remote server
for recipedir in "$recipesdir"/*; do
    load-recipe "$recipedir"
    arname="$(archive-name "$recipedir")"

    if [[ -n $forceflag ]] || ! rcurl "$remote"/"$arname" -o "$repodir"/"$arname"; then
        pkgworkdir="$pkgsworkdir"/"$pkgname"
        status "Building $pkgname in $pkgworkdir"
        "${BASH_SOURCE%/*}"/build-package "$recipedir" "$pkgworkdir"
        mv "$pkgworkdir"/*.ipk "$repodir"
    else
        status "Reusing already built $pkgname from remote"
    fi
done

# Set atime and mtime to fixed timestamp for all packages (needs to be done
# before generating the package index because the index files include the
# packages mtime)
find "$repodir" -exec touch --no-dereference --date="@${SOURCE_DATE_EPOCH}" {} +

# Build packages index
"${BASH_SOURCE%/*}"/opkg/opkg-make-index --checksum sha256 -p "$repodir"/Packages "$repodir"

# Set atime and mtime to fixed timestamp for all files (also needs to be done
# after generating the index so that it itself has a fixed mtime)
find "$repodir" -exec touch --no-dereference --date="@${SOURCE_DATE_EPOCH}" {} +
status "Done. Result is in $repodir"
